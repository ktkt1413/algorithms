import collections

# wrap up
# 해시테이블 사용 시  key값 중복이 흔하게 발생 -> 상자 크기가 중요
# load factor: 일반적으로 자바 : 0.75 / 파이썬 0.66 / 루비 0.5
# 해싱함수 성능 중요, 일반적으로 modular연산 사용, x mod m 일때 m이 해시테이블 크기,

# 해싱 사용 시 충돌이 일어났을때 해결 방법은?
# 개별 체이닝 - 중복 발생시 링크로 연결, 최악의 경우 탐색이 O(n) 이 됨
# 오픈 어드레싱 - probing 전략에 따라 다름, 선형이 제일 쉬움, 클러스터링 문제

# 파이썬은 딕셔터리에 해시테이블(오픈 어드레싱) 사용 -> 체이닝 시 오버헤드 발생으로 오픈 어드레싱 채택

